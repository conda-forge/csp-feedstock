{% set name = "csp" %}
{% set version = "0.11.3" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name [0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 02580883054ac438107cb17df817b97b92283f61f5c610ea8959eb6c5542b131
  patches:
    - patches/0001-remove-autogen.patch  # [build_platform != target_platform]
    - patches/0002-local-csp.patch
    - patches/0003-arrow-20-21.patch

build:
  number: 1
  skip: true  # [py>312]
  # conda-build fails to find .pyd files co-located next to each other whereas the windows
  # DLL loader does.
  error_overlinking: false  # [win]
  script:
    # We can't cross-compile on csp due to https://github.com/Point72/csp/issues/264
    # So we "fake it" and use pregenerated files
    - mkdir -p $SRC_DIR/_skbuild/macosx-10.15-arm64-{3.8,3.9,3.10,3.11,3.12}/cmake-build/cpp/csp/engine/csp_autogen/  # [build_platform != target_platform]
    - mkdir -p $SRC_DIR/_skbuild/macosx-10.15-arm64-{3.8,3.9,3.10,3.11,3.12}/cmake-build/cpp/csp/adapters/websocket/csp_autogen/  # [build_platform != target_platform]
    - cp $RECIPE_DIR/patches/engine/{autogen_types.cpp,autogen_types.h} $SRC_DIR/_skbuild/macosx-10.15-arm64-3.8/cmake-build/cpp/csp/engine/csp_autogen/  # [build_platform != target_platform]
    - cp $RECIPE_DIR/patches/engine/{autogen_types.cpp,autogen_types.h} $SRC_DIR/_skbuild/macosx-10.15-arm64-3.9/cmake-build/cpp/csp/engine/csp_autogen/  # [build_platform != target_platform]
    - cp $RECIPE_DIR/patches/engine/{autogen_types.cpp,autogen_types.h} $SRC_DIR/_skbuild/macosx-10.15-arm64-3.10/cmake-build/cpp/csp/engine/csp_autogen/  # [build_platform != target_platform]
    - cp $RECIPE_DIR/patches/engine/{autogen_types.cpp,autogen_types.h} $SRC_DIR/_skbuild/macosx-10.15-arm64-3.11/cmake-build/cpp/csp/engine/csp_autogen/  # [build_platform != target_platform]
    - cp $RECIPE_DIR/patches/engine/{autogen_types.cpp,autogen_types.h} $SRC_DIR/_skbuild/macosx-10.15-arm64-3.12/cmake-build/cpp/csp/engine/csp_autogen/  # [build_platform != target_platform]
    - cp $RECIPE_DIR/patches/adapters/websocket/{websocket_types.cpp,websocket_types.h} $SRC_DIR/_skbuild/macosx-10.15-arm64-3.8/cmake-build/cpp/csp/adapters/websocket/csp_autogen/  # [build_platform != target_platform]
    - cp $RECIPE_DIR/patches/adapters/websocket/{websocket_types.cpp,websocket_types.h} $SRC_DIR/_skbuild/macosx-10.15-arm64-3.9/cmake-build/cpp/csp/adapters/websocket/csp_autogen/  # [build_platform != target_platform]
    - cp $RECIPE_DIR/patches/adapters/websocket/{websocket_types.cpp,websocket_types.h} $SRC_DIR/_skbuild/macosx-10.15-arm64-3.10/cmake-build/cpp/csp/adapters/websocket/csp_autogen/  # [build_platform != target_platform]
    - cp $RECIPE_DIR/patches/adapters/websocket/{websocket_types.cpp,websocket_types.h} $SRC_DIR/_skbuild/macosx-10.15-arm64-3.11/cmake-build/cpp/csp/adapters/websocket/csp_autogen/  # [build_platform != target_platform]
    - cp $RECIPE_DIR/patches/adapters/websocket/{websocket_types.cpp,websocket_types.h} $SRC_DIR/_skbuild/macosx-10.15-arm64-3.12/cmake-build/cpp/csp/adapters/websocket/csp_autogen/  # [build_platform != target_platform]
    - export CSP_USE_VCPKG=0  # [not win]
    - {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation  # [not win]
    - set CSP_GENERATOR=Visual Studio 17 2022  # [win]
    - set CSP_USE_VCPKG=0  # [win]
    - {{ PYTHON }} setup.py build_ext install --single-version-externally-managed  --record=record.txt  # [win]
    # Cleanup after, need to tweak pyproject
    - rm -rf $PREFIX/cpp $PREFIX/CMakeLists.txt $PREFIX/LICENSE $PREFIX/NOTICE $PREFIX/pyproject.toml $PREFIX/README.md $PREFIX/setup.py $PREFIX/vcpkg.json  # [not win]
  rpaths:
    - {{ SP_DIR }}/csp/lib  # [not win]
  run_exports:
    - {{ pin_subpackage('csp', max_pin='x.x') }}
  ignore_run_exports:
    - numpy

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy <2                               # [build_platform != target_platform]
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
    - cmake <4
    - make  # [not win]
    - bison  # [not win]
    - flex  # [not win]
  host:
    - python
    - brotli
    - cmake <4
    - cyrus-sasl
    - deprecated
    - exprtk
    - gtest
    - libarrow <20
    - libboost-headers
    - libparquet <20
    - librdkafka
    - lz4-c
    - numpy <2
    - openssl
    - pip
    - pyarrow <20
    - pydantic >=2
    - rapidjson
    - ruamel.yaml
    - scikit-build
    - setuptools >=69,<74
    - typing-extensions
    - websocketpp
    - zlib
  run:
    - python
    - {{ pin_compatible('numpy') }}
    - backports.zoneinfo  # [py<39]
    - deprecated
    - openssl
    - packaging
    - pandas
    - pandas <2.3  # [py<310]
    - pyarrow
    - psutil
    - pydantic >=2
    - pytz
    - rapidjson
    - ruamel.yaml
    - sqlalchemy

test:
  requires:
    - pip
  commands:
    - pip check
  imports:
    - csp

about:
  home: http://github.com/point72/csp
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: csp is a high performance reactive stream processing library, written in C++ and Python
  description: csp is a high performance reactive stream processing library, written in C++ and Python
  dev_url: https://github.com/point72/csp

extra:
  recipe-maintainers:
    - arhamchopra
    - ptomecek
    - alexddobkin
    - robambalu
    - AdamGlustein
    - timkpaine
